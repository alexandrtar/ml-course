[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "medical-image-segmentation"
dynamic = ["version"]
description = "Medical Image Segmentation with UNet - Production-ready system for medical image segmentation"
authors = [
    {name = "Alexander Tarasov", email = "alexandrtarasov1996@gmail.com"},
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["medical", "segmentation", "unet", "deep-learning", "computer-vision"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "opencv-python>=4.7.0",
    "matplotlib>=3.5.0",
    "scikit-learn>=1.2.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "seaborn>=0.11.0",
    "tqdm>=4.60.0",
    "Pillow>=9.0.0",
    "albumentations>=1.3.0",
    "mlflow>=2.0.0",
    "wandb>=0.15.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    "python-multipart>=0.0.6",
    "pydantic>=2.0.0",
    "PyYAML>=6.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
]

[project.urls]
Homepage = "https://github.com/alexandrtar/ml-course"
Repository = "https://github.com/alexandrtar/ml-course/tree/main/computer-vision/medical-image-segmentation"
"Issue Tracker" = "https://github.com/alexandrtar/ml-course/issues"

[tool.setuptools_scm]
write_to = "medical_image_segmentation/_version.py"

[project.scripts]
medseg-train = "scripts.train:main"
medseg-evaluate = "scripts.evaluate:main"
medseg-demo = "scripts.demo:main"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = "E203,W503"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    "*.pyc",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=medical_image_segmentation --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]