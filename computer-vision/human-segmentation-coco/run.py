import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, current_dir)
sys.path.insert(0, os.path.join(current_dir, 'src'))

def run_project():
    print("üéØ Human Segmentation Project Runner")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    required_files = [
        'src/__init__.py',
        'src/segmentation.py', 
        'src/evaluation.py',
        'requirements.txt'
    ]
    
    missing_files = []
    for file in required_files:
        if not os.path.exists(file):
            missing_files.append(file)
    
    if missing_files:
        print("‚ùå Missing files:")
        for file in missing_files:
            print(f"   - {file}")
        print("\nüìÅ Current directory structure:")
        for root, dirs, files in os.walk('.'):
            level = root.replace('.', '').count(os.sep)
            indent = ' ' * 2 * level
            print(f'{indent}{os.path.basename(root)}/')
            subindent = ' ' * 2 * (level + 1)
            for file in files:
                print(f'{subindent}{file}')
        return
    
    print("‚úÖ All required files found!")
    
    try:
        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç
        from src.segmentation import HumanSegmentator
        from src.evaluation import SegmentationEvaluator
        
        print("üß™ Running basic functionality test...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º
        segmentator = HumanSegmentator()
        evaluator = SegmentationEvaluator()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        import numpy as np
        test_img = np.random.rand(100, 100, 3).astype(np.float32)
        test_mask = segmentator.segment(test_img)
        
        print(f"‚úÖ Segmentation successful! Mask shape: {test_mask.shape}")
        print("üéâ Project is ready to use!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        print("\nüìö Available functions:")
        print("  - HumanSegmentator().segment(image)")
        print("  - SegmentationEvaluator().calculate_iou(mask1, mask2)")
        print("  - ResultsVisualizer().plot_comparison(...)")
        
    except Exception as e:
        print(f"‚ùå Error during execution: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    run_project()